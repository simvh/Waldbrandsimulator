/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import control.Computer;
import control.Modus;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.NumberFormatter;
import wald.Helfer;
import wald.wald;

/**
 *
 * @author a.diener
 */
public class MainFrame extends javax.swing.JFrame {

        
    protected File inFile=new File("src/data/demowald5");
    protected File outFile=new File("src/data/demo5out");
    protected int helpers;
    protected int MBSaved;
    protected int mode;
    private final GenFrame gen;
    private final TheWood view;
    private final NumberFormatter positive = new NumberFormatter();

    protected void setIn(File file){
        inFile=file;
        tInput.setText(PathShortener.pathLengthShortener(inFile.getName(),27));
    }
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        positive.setMinimum(0);
        gen=new GenFrame(this);
        view=new TheWood(this);
        helpers=Integer.parseInt(tHCount.getText());
        MBSaved=Integer.parseInt(tMBSaved.getText());
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        fileChooser = new javax.swing.JFileChooser();
        dReplace = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tInput = new javax.swing.JLabel();
        tOutput = new javax.swing.JLabel();
        bOpenIn = new javax.swing.JButton();
        bGenWood = new javax.swing.JButton();
        bOpenOut = new javax.swing.JButton();
        bShowIn = new javax.swing.JButton();
        bRun = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lMode = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tHCount = new javax.swing.JFormattedTextField(positive);
        tMBSaved = new javax.swing.JFormattedTextField(positive);
        jMenuBar1 = new javax.swing.JMenuBar();
        mFile = new javax.swing.JMenu();
        mViewer = new javax.swing.JMenuItem();
        mExit = new javax.swing.JMenuItem();
        mHelp = new javax.swing.JMenu();
        mAbout = new javax.swing.JMenuItem();

        jLabel6.setText("This file exists. Replace?");

        jButton1.setText("Yes");

        jButton2.setText("No, select another one");

        jButton3.setText("Cancel");

        javax.swing.GroupLayout dReplaceLayout = new javax.swing.GroupLayout(dReplace.getContentPane());
        dReplace.getContentPane().setLayout(dReplaceLayout);
        dReplaceLayout.setHorizontalGroup(
            dReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dReplaceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(dReplaceLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dReplaceLayout.setVerticalGroup(
            dReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dReplaceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Helpercount:");

        jLabel2.setText("Must be saved (%):");

        tInput.setText("browse/create a file");
        tInput.setName(""); // NOI18N

        tOutput.setText("browse a file");

        bOpenIn.setText("Browse");
        bOpenIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOpenInActionPerformed(evt);
            }
        });

        bGenWood.setText("Create");
        bGenWood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenWoodActionPerformed(evt);
            }
        });

        bOpenOut.setText("Browse");
        bOpenOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOpenOutActionPerformed(evt);
            }
        });

        bShowIn.setText("Show");
        bShowIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowInActionPerformed(evt);
            }
        });

        bRun.setText("Run");
        bRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRunActionPerformed(evt);
            }
        });

        jLabel3.setText("Mode:");

        lMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Emergency", "Preventive" }));
        lMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lModeActionPerformed(evt);
            }
        });

        jLabel4.setText("Input:");

        jLabel5.setText("Output:");

        tHCount.setText("50");
        tHCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHCountActionPerformed(evt);
            }
        });

        tMBSaved.setText("50");
        tMBSaved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMBSavedActionPerformed(evt);
            }
        });

        mFile.setText("File");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bGenWood, org.jdesktop.beansbinding.ELProperty.create("${actionCommand}"), mFile, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        mViewer.setText("Open Viewer");
        mViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mViewerActionPerformed(evt);
            }
        });
        mFile.add(mViewer);

        mExit.setText("Exit");
        mExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mExitActionPerformed(evt);
            }
        });
        mFile.add(mExit);

        jMenuBar1.add(mFile);

        mHelp.setText("Help");

        mAbout.setText("About");
        mHelp.add(mAbout);

        jMenuBar1.add(mHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tHCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bOpenIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bGenWood)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bShowIn))
                    .addComponent(bOpenOut)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(bRun))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tMBSaved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tInput)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bOpenIn)
                    .addComponent(bGenWood)
                    .addComponent(bShowIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tOutput)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bOpenOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tHCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tMBSaved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(bRun)
                .addContainerGap())
        );

        tHCount.addFocusListener(new FocusListener() {
            @Override
            public void focusLost(FocusEvent e) {
                tHCountActionPerformed(e);
            }

            @Override
            public void focusGained(FocusEvent e) {
            }
        });
        tMBSaved.addFocusListener(new FocusListener() {
            @Override
            public void focusLost(FocusEvent e) {
                tMBSavedActionPerformed(e);
            }

            @Override
            public void focusGained(FocusEvent e) {
            }
        });

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bOpenOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOpenOutActionPerformed
        if (outFile==null) {
            fileChooser.setCurrentDirectory(new File("src/data/out"));
        } else {
            fileChooser.setCurrentDirectory(outFile);
            fileChooser.setSelectedFile(outFile);
        }
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            outFile = fileChooser.getSelectedFile();
            tOutput.setText(PathShortener.pathLengthShortener(outFile.getName(),26));
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_bOpenOutActionPerformed

    private void bOpenInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOpenInActionPerformed
        if (inFile==null) {
            fileChooser.setCurrentDirectory(new File("src/data/wald"));
        } else {
            fileChooser.setCurrentDirectory(inFile);
            fileChooser.setSelectedFile(inFile);
        }
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            inFile = fileChooser.getSelectedFile();
            tInput.setText(PathShortener.pathLengthShortener(inFile.getName(),27));
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_bOpenInActionPerformed

    private void lModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lModeActionPerformed

    private void mExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mExitActionPerformed
      System.exit(0);
    }//GEN-LAST:event_mExitActionPerformed

    private void bGenWoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenWoodActionPerformed
      gen.setVisible(true);
    }//GEN-LAST:event_bGenWoodActionPerformed

    private void bRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRunActionPerformed
        if(inFile==null){
            JOptionPane.showMessageDialog(this, "Please choose a file for input", "No input", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(outFile==null){
            JOptionPane.showMessageDialog(this, "Please choose a file for output", "No output", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WoodChecker check=new WoodChecker(inFile);
        if(!check.isWood()) {
            JOptionPane.showMessageDialog(this, "Not a Wood-File!", "Wrong file!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        view.compute(check,helpers,MBSaved,(lMode.getSelectedIndex()==0)?'e':'p',inFile,outFile);  
        view.setVisible(true);
    }//GEN-LAST:event_bRunActionPerformed

    private void bShowInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowInActionPerformed
        if(inFile==null) {
            JOptionPane.showMessageDialog(this, "Nothing was selected!", "No selection", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        WoodChecker check=new WoodChecker(inFile);
        if(!check.isWood()) {
            JOptionPane.showMessageDialog(this, "Not a Wood-File!", "Wrong file!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        view.setVisible(true);
        view.show(inFile,outFile);
    }//GEN-LAST:event_bShowInActionPerformed

    private void mViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mViewerActionPerformed
       view.setVisible(true);
    }//GEN-LAST:event_mViewerActionPerformed

    private void tHCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHCountActionPerformed
       if(tHCount.getText().equals("")){
            tHCount.setText(helpers+"");
            return;
        }
        helpers=Integer.parseInt(tHCount.getText());
    }//GEN-LAST:event_tHCountActionPerformed

    private void tMBSavedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMBSavedActionPerformed
        if(tMBSaved.getText().equals("")){
            tMBSaved.setText(MBSaved+"");
            return;
        }
        MBSaved=Integer.parseInt(tMBSaved.getText());
    }//GEN-LAST:event_tMBSavedActionPerformed
        
    private void tHCountActionPerformed(FocusEvent evt) {                                        
        if(tHCount.getText().equals("")){
            tHCount.setText(helpers+"");
            return;
        }
        helpers=Integer.parseInt(tHCount.getText());
    }   
    
    private void tMBSavedActionPerformed(FocusEvent evt) {                                         
        if(tMBSaved.getText().equals("")){
            tMBSaved.setText(MBSaved+"");
            return;
        }
        MBSaved=Integer.parseInt(tMBSaved.getText());
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGenWood;
    private javax.swing.JButton bOpenIn;
    private javax.swing.JButton bOpenOut;
    private javax.swing.JButton bRun;
    private javax.swing.JButton bShowIn;
    private javax.swing.JDialog dReplace;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JComboBox lMode;
    private javax.swing.JMenuItem mAbout;
    private javax.swing.JMenuItem mExit;
    private javax.swing.JMenu mFile;
    private javax.swing.JMenu mHelp;
    private javax.swing.JMenuItem mViewer;
    private javax.swing.JFormattedTextField tHCount;
    private javax.swing.JLabel tInput;
    private javax.swing.JFormattedTextField tMBSaved;
    private javax.swing.JLabel tOutput;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
